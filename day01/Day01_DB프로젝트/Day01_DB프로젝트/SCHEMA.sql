-- --------------------------------------------------------
-- 호스트:                          127.0.0.1
-- 서버 버전:                        10.5.1-MariaDB - mariadb.org binary distribution
-- 서버 OS:                        Win64
-- HeidiSQL 버전:                  10.3.0.5771
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;


-- ssafy_new 데이터베이스 구조 내보내기
CREATE DATABASE IF NOT EXISTS `ssafy_new` /*!40100 DEFAULT CHARACTER SET latin1 */;
USE `ssafy_new`;

-- 뷰 ssafy_new.1기알고리즘a+이상 구조 내보내기
-- VIEW 종속성 오류를 극복하기 위해 임시 테이블을 생성합니다.
CREATE TABLE `1기알고리즘a+이상` (
	`STUDENT_ACCOUNT` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_NAME` VARCHAR(100) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_HP` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_AGE` INT(11) NOT NULL,
	`STUDENT_GENDER` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_CURRICULUM` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG_DT` DATETIME NOT NULL,
	`STUDENT_LAST` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_LAST_DT` DATETIME NOT NULL,
	`ALGORITHM_GRADE` VARCHAR(4) NOT NULL COLLATE 'euckr_korean_ci',
	`ALGORITHM_ACQUISITION_DATE` DATE NULL,
	`GROUP_ID` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci'
) ENGINE=MyISAM;

-- 뷰 ssafy_new.1월10일결석자 구조 내보내기
-- VIEW 종속성 오류를 극복하기 위해 임시 테이블을 생성합니다.
CREATE TABLE `1월10일결석자` (
	`STUDENT_ACCOUNT` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_NAME` VARCHAR(100) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_HP` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_AGE` INT(11) NOT NULL,
	`STUDENT_GENDER` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_CURRICULUM` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG_DT` DATETIME NOT NULL,
	`STUDENT_LAST` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_LAST_DT` DATETIME NOT NULL,
	`ALGORITHM_GRADE` VARCHAR(4) NOT NULL COLLATE 'euckr_korean_ci',
	`ALGORITHM_ACQUISITION_DATE` DATE NULL,
	`GROUP_ID` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci'
) ENGINE=MyISAM;

-- 뷰 ssafy_new.1월1일결석 구조 내보내기
-- VIEW 종속성 오류를 극복하기 위해 임시 테이블을 생성합니다.
CREATE TABLE `1월1일결석` (
	`STUDENT_ACCOUNT` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_NAME` VARCHAR(100) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_HP` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_AGE` INT(11) NOT NULL,
	`STUDENT_GENDER` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_CURRICULUM` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG_DT` DATETIME NOT NULL,
	`STUDENT_LAST` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_LAST_DT` DATETIME NOT NULL,
	`ALGORITHM_GRADE` VARCHAR(4) NOT NULL COLLATE 'euckr_korean_ci',
	`ALGORITHM_ACQUISITION_DATE` DATE NULL,
	`GROUP_ID` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci'
) ENGINE=MyISAM;

-- 뷰 ssafy_new.1월2일결석 구조 내보내기
-- VIEW 종속성 오류를 극복하기 위해 임시 테이블을 생성합니다.
CREATE TABLE `1월2일결석` (
	`STUDENT_ACCOUNT` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_NAME` VARCHAR(100) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_HP` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_AGE` INT(11) NOT NULL,
	`STUDENT_GENDER` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_CURRICULUM` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG_DT` DATETIME NOT NULL,
	`STUDENT_LAST` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_LAST_DT` DATETIME NOT NULL,
	`ALGORITHM_GRADE` VARCHAR(4) NOT NULL COLLATE 'euckr_korean_ci',
	`ALGORITHM_ACQUISITION_DATE` DATE NULL,
	`GROUP_ID` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci'
) ENGINE=MyISAM;

-- 뷰 ssafy_new.1월3일결석 구조 내보내기
-- VIEW 종속성 오류를 극복하기 위해 임시 테이블을 생성합니다.
CREATE TABLE `1월3일결석` (
	`STUDENT_ACCOUNT` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_NAME` VARCHAR(100) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_HP` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_AGE` INT(11) NOT NULL,
	`STUDENT_GENDER` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_CURRICULUM` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG_DT` DATETIME NOT NULL,
	`STUDENT_LAST` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_LAST_DT` DATETIME NOT NULL,
	`ALGORITHM_GRADE` VARCHAR(4) NOT NULL COLLATE 'euckr_korean_ci',
	`ALGORITHM_ACQUISITION_DATE` DATE NULL,
	`GROUP_ID` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci'
) ENGINE=MyISAM;

-- 뷰 ssafy_new.1월4일결석 구조 내보내기
-- VIEW 종속성 오류를 극복하기 위해 임시 테이블을 생성합니다.
CREATE TABLE `1월4일결석` (
	`STUDENT_ACCOUNT` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_NAME` VARCHAR(100) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_HP` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_AGE` INT(11) NOT NULL,
	`STUDENT_GENDER` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_CURRICULUM` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG_DT` DATETIME NOT NULL,
	`STUDENT_LAST` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_LAST_DT` DATETIME NOT NULL,
	`ALGORITHM_GRADE` VARCHAR(4) NOT NULL COLLATE 'euckr_korean_ci',
	`ALGORITHM_ACQUISITION_DATE` DATE NULL,
	`GROUP_ID` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci'
) ENGINE=MyISAM;

-- 뷰 ssafy_new.1월5일결석 구조 내보내기
-- VIEW 종속성 오류를 극복하기 위해 임시 테이블을 생성합니다.
CREATE TABLE `1월5일결석` (
	`STUDENT_ACCOUNT` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_NAME` VARCHAR(100) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_HP` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_AGE` INT(11) NOT NULL,
	`STUDENT_GENDER` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_CURRICULUM` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG_DT` DATETIME NOT NULL,
	`STUDENT_LAST` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_LAST_DT` DATETIME NOT NULL,
	`ALGORITHM_GRADE` VARCHAR(4) NOT NULL COLLATE 'euckr_korean_ci',
	`ALGORITHM_ACQUISITION_DATE` DATE NULL,
	`GROUP_ID` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci'
) ENGINE=MyISAM;

-- 뷰 ssafy_new.1월6일결석 구조 내보내기
-- VIEW 종속성 오류를 극복하기 위해 임시 테이블을 생성합니다.
CREATE TABLE `1월6일결석` (
	`STUDENT_ACCOUNT` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_NAME` VARCHAR(100) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_HP` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_AGE` INT(11) NOT NULL,
	`STUDENT_GENDER` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_CURRICULUM` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG_DT` DATETIME NOT NULL,
	`STUDENT_LAST` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_LAST_DT` DATETIME NOT NULL,
	`ALGORITHM_GRADE` VARCHAR(4) NOT NULL COLLATE 'euckr_korean_ci',
	`ALGORITHM_ACQUISITION_DATE` DATE NULL,
	`GROUP_ID` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci'
) ENGINE=MyISAM;

-- 뷰 ssafy_new.1월7일결석 구조 내보내기
-- VIEW 종속성 오류를 극복하기 위해 임시 테이블을 생성합니다.
CREATE TABLE `1월7일결석` (
	`STUDENT_ACCOUNT` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_NAME` VARCHAR(100) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_HP` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_AGE` INT(11) NOT NULL,
	`STUDENT_GENDER` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_CURRICULUM` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG_DT` DATETIME NOT NULL,
	`STUDENT_LAST` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_LAST_DT` DATETIME NOT NULL,
	`ALGORITHM_GRADE` VARCHAR(4) NOT NULL COLLATE 'euckr_korean_ci',
	`ALGORITHM_ACQUISITION_DATE` DATE NULL,
	`GROUP_ID` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci'
) ENGINE=MyISAM;

-- 뷰 ssafy_new.1월8일결석 구조 내보내기
-- VIEW 종속성 오류를 극복하기 위해 임시 테이블을 생성합니다.
CREATE TABLE `1월8일결석` (
	`STUDENT_ACCOUNT` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_NAME` VARCHAR(100) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_HP` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_AGE` INT(11) NOT NULL,
	`STUDENT_GENDER` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_CURRICULUM` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG_DT` DATETIME NOT NULL,
	`STUDENT_LAST` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_LAST_DT` DATETIME NOT NULL,
	`ALGORITHM_GRADE` VARCHAR(4) NOT NULL COLLATE 'euckr_korean_ci',
	`ALGORITHM_ACQUISITION_DATE` DATE NULL,
	`GROUP_ID` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci'
) ENGINE=MyISAM;

-- 뷰 ssafy_new.1월9일결석자 구조 내보내기
-- VIEW 종속성 오류를 극복하기 위해 임시 테이블을 생성합니다.
CREATE TABLE `1월9일결석자` (
	`STUDENT_ACCOUNT` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_NAME` VARCHAR(100) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_HP` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_AGE` INT(11) NOT NULL,
	`STUDENT_GENDER` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_CURRICULUM` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG_DT` DATETIME NOT NULL,
	`STUDENT_LAST` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_LAST_DT` DATETIME NOT NULL,
	`ALGORITHM_GRADE` VARCHAR(4) NOT NULL COLLATE 'euckr_korean_ci',
	`ALGORITHM_ACQUISITION_DATE` DATE NULL,
	`GROUP_ID` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci'
) ENGINE=MyISAM;

-- 뷰 ssafy_new.2기알고리즘a+이상 구조 내보내기
-- VIEW 종속성 오류를 극복하기 위해 임시 테이블을 생성합니다.
CREATE TABLE `2기알고리즘a+이상` (
	`STUDENT_ACCOUNT` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_NAME` VARCHAR(100) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_HP` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_AGE` INT(11) NOT NULL,
	`STUDENT_GENDER` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_CURRICULUM` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG_DT` DATETIME NOT NULL,
	`STUDENT_LAST` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_LAST_DT` DATETIME NOT NULL,
	`ALGORITHM_GRADE` VARCHAR(4) NOT NULL COLLATE 'euckr_korean_ci',
	`ALGORITHM_ACQUISITION_DATE` DATE NULL,
	`GROUP_ID` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci'
) ENGINE=MyISAM;

-- 테이블 ssafy_new.attendance 구조 내보내기
CREATE TABLE IF NOT EXISTS `attendance` (
  `DATE` date NOT NULL,
  `STUDENT_ACCOUNT` varchar(20) NOT NULL,
  `SIGN_IN` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `SIGN_OUT` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `ATTENDANCE` tinyint(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`DATE`,`STUDENT_ACCOUNT`)
) ENGINE=InnoDB DEFAULT CHARSET=euckr;

-- 내보낼 데이터가 선택되어 있지 않습니다.

-- 테이블 ssafy_new.class 구조 내보내기
CREATE TABLE IF NOT EXISTS `class` (
  `CLASS_ID` varchar(10) NOT NULL,
  `REGION_ID` varchar(20) NOT NULL,
  PRIMARY KEY (`CLASS_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=euckr;

-- 내보낼 데이터가 선택되어 있지 않습니다.

-- 테이블 ssafy_new.exam 구조 내보내기
CREATE TABLE IF NOT EXISTS `exam` (
  `EXAM_ID` int(11) NOT NULL AUTO_INCREMENT,
  `EXAM_TITLE` varchar(100) NOT NULL,
  PRIMARY KEY (`EXAM_ID`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=euckr;

-- 내보낼 데이터가 선택되어 있지 않습니다.

-- 테이블 ssafy_new.grade_exam 구조 내보내기
CREATE TABLE IF NOT EXISTS `grade_exam` (
  `EXAM_ID` int(11) NOT NULL,
  `STUDENT_ACCOUNT` varchar(50) NOT NULL,
  `EXAM_GRADE` int(11) NOT NULL DEFAULT 0,
  PRIMARY KEY (`EXAM_ID`,`STUDENT_ACCOUNT`),
  CONSTRAINT `FK_EXAM_TO_GRADE_EXAM_1` FOREIGN KEY (`EXAM_ID`) REFERENCES `exam` (`EXAM_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=euckr;

-- 내보낼 데이터가 선택되어 있지 않습니다.

-- 테이블 ssafy_new.grade_project 구조 내보내기
CREATE TABLE IF NOT EXISTS `grade_project` (
  `PROJECT_ID` int(11) NOT NULL,
  `FEATURE_GRADE` int(11) NOT NULL DEFAULT 0,
  `UX_GRADE` int(11) NOT NULL DEFAULT 0,
  `PRGM_GRADE` int(11) NOT NULL DEFAULT 0,
  PRIMARY KEY (`PROJECT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=euckr;

-- 내보낼 데이터가 선택되어 있지 않습니다.

-- 테이블 ssafy_new.grade_project_indivisual 구조 내보내기
CREATE TABLE IF NOT EXISTS `grade_project_indivisual` (
  `PROJECT_ID` int(11) NOT NULL,
  `STUDENT_ACCOUNT` varchar(50) NOT NULL,
  `PROJECT_GRADE` int(11) NOT NULL DEFAULT 0,
  `PEER_EVAL` int(11) NOT NULL DEFAULT 0,
  `PEER_EVAL_DES` varchar(255) NOT NULL DEFAULT '',
  `EVAL` int(11) NOT NULL DEFAULT 0,
  `EVAL_DES` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`PROJECT_ID`,`STUDENT_ACCOUNT`)
) ENGINE=InnoDB DEFAULT CHARSET=euckr;

-- 내보낼 데이터가 선택되어 있지 않습니다.

-- 테이블 ssafy_new.group 구조 내보내기
CREATE TABLE IF NOT EXISTS `group` (
  `GROUP_ID` varchar(10) NOT NULL,
  `CLASS_ID` varchar(10) NOT NULL,
  PRIMARY KEY (`GROUP_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=euckr;

-- 내보낼 데이터가 선택되어 있지 않습니다.

-- 테이블 ssafy_new.projcet 구조 내보내기
CREATE TABLE IF NOT EXISTS `projcet` (
  `PROJECT_ID` int(11) NOT NULL,
  `PROJECT_NAME` varchar(50) NOT NULL DEFAULT '',
  PRIMARY KEY (`PROJECT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=euckr;

-- 내보낼 데이터가 선택되어 있지 않습니다.

-- 테이블 ssafy_new.region 구조 내보내기
CREATE TABLE IF NOT EXISTS `region` (
  `REGION_ID` varchar(20) NOT NULL,
  PRIMARY KEY (`REGION_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=euckr;

-- 내보낼 데이터가 선택되어 있지 않습니다.

-- 테이블 ssafy_new.student 구조 내보내기
CREATE TABLE IF NOT EXISTS `student` (
  `STUDENT_ACCOUNT` varchar(20) NOT NULL,
  `STUDENT_NAME` varchar(100) NOT NULL DEFAULT '',
  `STUDENT_HP` varchar(20) NOT NULL DEFAULT '',
  `STUDENT_AGE` int(11) NOT NULL DEFAULT 0,
  `STUDENT_GENDER` varchar(20) NOT NULL DEFAULT '',
  `STUDENT_CURRICULUM` varchar(20) NOT NULL DEFAULT '',
  `STUDENT_REG` varchar(40) NOT NULL DEFAULT '',
  `STUDENT_REG_DT` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `STUDENT_LAST` varchar(40) NOT NULL DEFAULT '',
  `STUDENT_LAST_DT` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `ALGORITHM_GRADE` varchar(4) NOT NULL DEFAULT 'N',
  `ALGORITHM_ACQUISITION_DATE` date DEFAULT '0000-00-00',
  `GROUP_ID` varchar(20) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=euckr;

-- 내보낼 데이터가 선택되어 있지 않습니다.

-- 테이블 ssafy_new.students_projects 구조 내보내기
CREATE TABLE IF NOT EXISTS `students_projects` (
  `STUDENT_ACCOUNT` varchar(20) NOT NULL,
  `PROJECT_ID` int(11) NOT NULL,
  PRIMARY KEY (`STUDENT_ACCOUNT`,`PROJECT_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=euckr;

-- 내보낼 데이터가 선택되어 있지 않습니다.

-- 테이블 ssafy_new.teacher 구조 내보내기
CREATE TABLE IF NOT EXISTS `teacher` (
  `CLASS_TEACHER_ID` varchar(20) NOT NULL,
  `CLASS_TEACHER_HP` varchar(20) NOT NULL DEFAULT '',
  `CLASS_TEACHER_NAME` varchar(50) NOT NULL DEFAULT '',
  `CLASS_ID` varchar(10) NOT NULL DEFAULT 'temp',
  PRIMARY KEY (`CLASS_TEACHER_ID`)
) ENGINE=InnoDB DEFAULT CHARSET=euckr;

-- 내보낼 데이터가 선택되어 있지 않습니다.

-- 테이블 ssafy_new.user 구조 내보내기
CREATE TABLE IF NOT EXISTS `user` (
  `STUDENT_ACCOUNT` varchar(20) NOT NULL,
  `STUDENT_NAME` varchar(100) NOT NULL,
  `STUDENT_HP` varchar(20) DEFAULT NULL,
  `STUDENT_AGE` varchar(5) DEFAULT NULL,
  `STUDENT_GENDER` varchar(20) DEFAULT NULL,
  `STUDENT_CURRICULUM` varchar(20) DEFAULT NULL,
  `STUDENT_REGION` varchar(20) DEFAULT NULL,
  `STUDENT_GROUP` varchar(20) NOT NULL,
  `GROUP_TEACHER_ID` varchar(20) NOT NULL,
  `GROUP_TEACHER_NAME` varchar(20) NOT NULL,
  `GROUP_TEACHER_HP` varchar(20) NOT NULL,
  `GRADE_FIRST_EXAM` varchar(3) DEFAULT NULL,
  `GRADE_SECOND_EXAM` varchar(3) DEFAULT NULL,
  `GRADE_THIRD_EXAM` varchar(3) DEFAULT NULL,
  `ALGORITHM_GRADE` varchar(20) DEFAULT NULL,
  `ALGORITHM_ACQUISITION_DATE` datetime DEFAULT NULL,
  `ATTENDANCE_1/1` tinyint(1) DEFAULT NULL,
  `ATTENDANCE_1/1_SIGN_IN` datetime DEFAULT NULL,
  `ATTENDANCE_1/1_SIGN_OUT` datetime DEFAULT NULL,
  `ATTENDANCE_1/2` tinyint(1) DEFAULT NULL,
  `ATTENDANCE_1/2_SIGN_IN` datetime DEFAULT NULL,
  `ATTENDANCE_1/2_SIGN_OUT` datetime DEFAULT NULL,
  `ATTENDANCE_1/3` tinyint(1) DEFAULT NULL,
  `ATTENDANCE_1/3_SIGN_IN` datetime DEFAULT NULL,
  `ATTENDANCE_1/3_SIGN_OUT` datetime DEFAULT NULL,
  `ATTENDANCE_1/4` tinyint(1) DEFAULT NULL,
  `ATTENDANCE_1/4_SIGN_IN` datetime DEFAULT NULL,
  `ATTENDANCE_1/4_SIGN_OUT` datetime DEFAULT NULL,
  `ATTENDANCE_1/5` tinyint(1) DEFAULT NULL,
  `ATTENDANCE_1/5_SIGN_IN` datetime DEFAULT NULL,
  `ATTENDANCE_1/5_SIGN_OUT` datetime DEFAULT NULL,
  `ATTENDANCE_1/6` tinyint(1) DEFAULT NULL,
  `ATTENDANCE_1/6_SIGN_IN` datetime DEFAULT NULL,
  `ATTENDANCE_1/6_SIGN_OUT` datetime DEFAULT NULL,
  `ATTENDANCE_1/7` tinyint(1) DEFAULT NULL,
  `ATTENDANCE_1/7_SIGN_IN` datetime DEFAULT NULL,
  `ATTENDANCE_1/7_SIGN_OUT` datetime DEFAULT NULL,
  `ATTENDANCE_1/8` tinyint(1) DEFAULT NULL,
  `ATTENDANCE_1/8_SIGN_IN` datetime DEFAULT NULL,
  `ATTENDANCE_1/8_SIGN_OUT` datetime DEFAULT NULL,
  `ATTENDANCE_1/9` tinyint(1) DEFAULT NULL,
  `ATTENDANCE_1/9_SIGN_IN` datetime DEFAULT NULL,
  `ATTENDANCE_1/9_SIGN_OUT` datetime DEFAULT NULL,
  `ATTENDANCE_1/10` tinyint(1) DEFAULT NULL,
  `ATTENDANCE_1/10_SIGN_IN` datetime DEFAULT NULL,
  `ATTENDANCE_1/10_SIGN_OUT` datetime DEFAULT NULL,
  `REG_USER` varchar(20) DEFAULT NULL,
  `REG_DT` datetime DEFAULT NULL,
  `LAST_USER` varchar(20) DEFAULT NULL,
  `LAST_DT` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=euckr;

-- 내보낼 데이터가 선택되어 있지 않습니다.

-- 뷰 ssafy_new.광주a+이상 구조 내보내기
-- VIEW 종속성 오류를 극복하기 위해 임시 테이블을 생성합니다.
CREATE TABLE `광주a+이상` (
	`STUDENT_ACCOUNT` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_NAME` VARCHAR(100) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_HP` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_AGE` INT(11) NOT NULL,
	`STUDENT_GENDER` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_CURRICULUM` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG_DT` DATETIME NOT NULL,
	`STUDENT_LAST` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_LAST_DT` DATETIME NOT NULL,
	`ALGORITHM_GRADE` VARCHAR(4) NOT NULL COLLATE 'euckr_korean_ci',
	`ALGORITHM_ACQUISITION_DATE` DATE NULL,
	`GROUP_ID` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci'
) ENGINE=MyISAM;

-- 뷰 ssafy_new.구미a+이상 구조 내보내기
-- VIEW 종속성 오류를 극복하기 위해 임시 테이블을 생성합니다.
CREATE TABLE `구미a+이상` (
	`STUDENT_ACCOUNT` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_NAME` VARCHAR(100) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_HP` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_AGE` INT(11) NOT NULL,
	`STUDENT_GENDER` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_CURRICULUM` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG_DT` DATETIME NOT NULL,
	`STUDENT_LAST` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_LAST_DT` DATETIME NOT NULL,
	`ALGORITHM_GRADE` VARCHAR(4) NOT NULL COLLATE 'euckr_korean_ci',
	`ALGORITHM_ACQUISITION_DATE` DATE NULL,
	`GROUP_ID` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci'
) ENGINE=MyISAM;

-- 뷰 ssafy_new.대전a+이상 구조 내보내기
-- VIEW 종속성 오류를 극복하기 위해 임시 테이블을 생성합니다.
CREATE TABLE `대전a+이상` (
	`STUDENT_ACCOUNT` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_NAME` VARCHAR(100) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_HP` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_AGE` INT(11) NOT NULL,
	`STUDENT_GENDER` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_CURRICULUM` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG_DT` DATETIME NOT NULL,
	`STUDENT_LAST` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_LAST_DT` DATETIME NOT NULL,
	`ALGORITHM_GRADE` VARCHAR(4) NOT NULL COLLATE 'euckr_korean_ci',
	`ALGORITHM_ACQUISITION_DATE` DATE NULL,
	`GROUP_ID` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci'
) ENGINE=MyISAM;

-- 뷰 ssafy_new.서울a+이상 구조 내보내기
-- VIEW 종속성 오류를 극복하기 위해 임시 테이블을 생성합니다.
CREATE TABLE `서울a+이상` (
	`STUDENT_ACCOUNT` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_NAME` VARCHAR(100) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_HP` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_AGE` INT(11) NOT NULL,
	`STUDENT_GENDER` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_CURRICULUM` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_REG_DT` DATETIME NOT NULL,
	`STUDENT_LAST` VARCHAR(40) NOT NULL COLLATE 'euckr_korean_ci',
	`STUDENT_LAST_DT` DATETIME NOT NULL,
	`ALGORITHM_GRADE` VARCHAR(4) NOT NULL COLLATE 'euckr_korean_ci',
	`ALGORITHM_ACQUISITION_DATE` DATE NULL,
	`GROUP_ID` VARCHAR(20) NOT NULL COLLATE 'euckr_korean_ci'
) ENGINE=MyISAM;

-- 뷰 ssafy_new.1기알고리즘a+이상 구조 내보내기
-- 임시 테이블을 제거하고 최종 VIEW 구조를 생성
DROP TABLE IF EXISTS `1기알고리즘a+이상`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `1기알고리즘a+이상` AS select distinct `student`.`STUDENT_ACCOUNT` AS `STUDENT_ACCOUNT`,`student`.`STUDENT_NAME` AS `STUDENT_NAME`,`student`.`STUDENT_HP` AS `STUDENT_HP`,`student`.`STUDENT_AGE` AS `STUDENT_AGE`,`student`.`STUDENT_GENDER` AS `STUDENT_GENDER`,`student`.`STUDENT_CURRICULUM` AS `STUDENT_CURRICULUM`,`student`.`STUDENT_REG` AS `STUDENT_REG`,`student`.`STUDENT_REG_DT` AS `STUDENT_REG_DT`,`student`.`STUDENT_LAST` AS `STUDENT_LAST`,`student`.`STUDENT_LAST_DT` AS `STUDENT_LAST_DT`,`student`.`ALGORITHM_GRADE` AS `ALGORITHM_GRADE`,`student`.`ALGORITHM_ACQUISITION_DATE` AS `ALGORITHM_ACQUISITION_DATE`,`student`.`GROUP_ID` AS `GROUP_ID` from `student` where (`student`.`ALGORITHM_GRADE` = 'A+' or `student`.`ALGORITHM_GRADE` = 'B') and `student`.`STUDENT_CURRICULUM` = '1';

-- 뷰 ssafy_new.1월10일결석자 구조 내보내기
-- 임시 테이블을 제거하고 최종 VIEW 구조를 생성
DROP TABLE IF EXISTS `1월10일결석자`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `1월10일결석자` AS select distinct `s`.`STUDENT_ACCOUNT` AS `STUDENT_ACCOUNT`,`s`.`STUDENT_NAME` AS `STUDENT_NAME`,`s`.`STUDENT_HP` AS `STUDENT_HP`,`s`.`STUDENT_AGE` AS `STUDENT_AGE`,`s`.`STUDENT_GENDER` AS `STUDENT_GENDER`,`s`.`STUDENT_CURRICULUM` AS `STUDENT_CURRICULUM`,`s`.`STUDENT_REG` AS `STUDENT_REG`,`s`.`STUDENT_REG_DT` AS `STUDENT_REG_DT`,`s`.`STUDENT_LAST` AS `STUDENT_LAST`,`s`.`STUDENT_LAST_DT` AS `STUDENT_LAST_DT`,`s`.`ALGORITHM_GRADE` AS `ALGORITHM_GRADE`,`s`.`ALGORITHM_ACQUISITION_DATE` AS `ALGORITHM_ACQUISITION_DATE`,`s`.`GROUP_ID` AS `GROUP_ID` from (`student` `s` join `attendance` `a` on(`s`.`STUDENT_ACCOUNT` = `a`.`STUDENT_ACCOUNT`)) where `a`.`DATE` = '2020-01-10' and `a`.`ATTENDANCE` = 0;

-- 뷰 ssafy_new.1월1일결석 구조 내보내기
-- 임시 테이블을 제거하고 최종 VIEW 구조를 생성
DROP TABLE IF EXISTS `1월1일결석`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `1월1일결석` AS select distinct `s`.`STUDENT_ACCOUNT` AS `STUDENT_ACCOUNT`,`s`.`STUDENT_NAME` AS `STUDENT_NAME`,`s`.`STUDENT_HP` AS `STUDENT_HP`,`s`.`STUDENT_AGE` AS `STUDENT_AGE`,`s`.`STUDENT_GENDER` AS `STUDENT_GENDER`,`s`.`STUDENT_CURRICULUM` AS `STUDENT_CURRICULUM`,`s`.`STUDENT_REG` AS `STUDENT_REG`,`s`.`STUDENT_REG_DT` AS `STUDENT_REG_DT`,`s`.`STUDENT_LAST` AS `STUDENT_LAST`,`s`.`STUDENT_LAST_DT` AS `STUDENT_LAST_DT`,`s`.`ALGORITHM_GRADE` AS `ALGORITHM_GRADE`,`s`.`ALGORITHM_ACQUISITION_DATE` AS `ALGORITHM_ACQUISITION_DATE`,`s`.`GROUP_ID` AS `GROUP_ID` from (`student` `s` join `attendance` `a` on(`s`.`STUDENT_ACCOUNT` = `a`.`STUDENT_ACCOUNT`)) where `a`.`DATE` = '2020-01-01' and `a`.`ATTENDANCE` = 0;

-- 뷰 ssafy_new.1월2일결석 구조 내보내기
-- 임시 테이블을 제거하고 최종 VIEW 구조를 생성
DROP TABLE IF EXISTS `1월2일결석`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `1월2일결석` AS select distinct `s`.`STUDENT_ACCOUNT` AS `STUDENT_ACCOUNT`,`s`.`STUDENT_NAME` AS `STUDENT_NAME`,`s`.`STUDENT_HP` AS `STUDENT_HP`,`s`.`STUDENT_AGE` AS `STUDENT_AGE`,`s`.`STUDENT_GENDER` AS `STUDENT_GENDER`,`s`.`STUDENT_CURRICULUM` AS `STUDENT_CURRICULUM`,`s`.`STUDENT_REG` AS `STUDENT_REG`,`s`.`STUDENT_REG_DT` AS `STUDENT_REG_DT`,`s`.`STUDENT_LAST` AS `STUDENT_LAST`,`s`.`STUDENT_LAST_DT` AS `STUDENT_LAST_DT`,`s`.`ALGORITHM_GRADE` AS `ALGORITHM_GRADE`,`s`.`ALGORITHM_ACQUISITION_DATE` AS `ALGORITHM_ACQUISITION_DATE`,`s`.`GROUP_ID` AS `GROUP_ID` from (`student` `s` join `attendance` `a` on(`s`.`STUDENT_ACCOUNT` = `a`.`STUDENT_ACCOUNT`)) where `a`.`DATE` = '2020-01-02' and `a`.`ATTENDANCE` = 0;

-- 뷰 ssafy_new.1월3일결석 구조 내보내기
-- 임시 테이블을 제거하고 최종 VIEW 구조를 생성
DROP TABLE IF EXISTS `1월3일결석`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `1월3일결석` AS select distinct `s`.`STUDENT_ACCOUNT` AS `STUDENT_ACCOUNT`,`s`.`STUDENT_NAME` AS `STUDENT_NAME`,`s`.`STUDENT_HP` AS `STUDENT_HP`,`s`.`STUDENT_AGE` AS `STUDENT_AGE`,`s`.`STUDENT_GENDER` AS `STUDENT_GENDER`,`s`.`STUDENT_CURRICULUM` AS `STUDENT_CURRICULUM`,`s`.`STUDENT_REG` AS `STUDENT_REG`,`s`.`STUDENT_REG_DT` AS `STUDENT_REG_DT`,`s`.`STUDENT_LAST` AS `STUDENT_LAST`,`s`.`STUDENT_LAST_DT` AS `STUDENT_LAST_DT`,`s`.`ALGORITHM_GRADE` AS `ALGORITHM_GRADE`,`s`.`ALGORITHM_ACQUISITION_DATE` AS `ALGORITHM_ACQUISITION_DATE`,`s`.`GROUP_ID` AS `GROUP_ID` from (`student` `s` join `attendance` `a` on(`s`.`STUDENT_ACCOUNT` = `a`.`STUDENT_ACCOUNT`)) where `a`.`DATE` = '2020-01-03' and `a`.`ATTENDANCE` = 0;

-- 뷰 ssafy_new.1월4일결석 구조 내보내기
-- 임시 테이블을 제거하고 최종 VIEW 구조를 생성
DROP TABLE IF EXISTS `1월4일결석`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `1월4일결석` AS select distinct `s`.`STUDENT_ACCOUNT` AS `STUDENT_ACCOUNT`,`s`.`STUDENT_NAME` AS `STUDENT_NAME`,`s`.`STUDENT_HP` AS `STUDENT_HP`,`s`.`STUDENT_AGE` AS `STUDENT_AGE`,`s`.`STUDENT_GENDER` AS `STUDENT_GENDER`,`s`.`STUDENT_CURRICULUM` AS `STUDENT_CURRICULUM`,`s`.`STUDENT_REG` AS `STUDENT_REG`,`s`.`STUDENT_REG_DT` AS `STUDENT_REG_DT`,`s`.`STUDENT_LAST` AS `STUDENT_LAST`,`s`.`STUDENT_LAST_DT` AS `STUDENT_LAST_DT`,`s`.`ALGORITHM_GRADE` AS `ALGORITHM_GRADE`,`s`.`ALGORITHM_ACQUISITION_DATE` AS `ALGORITHM_ACQUISITION_DATE`,`s`.`GROUP_ID` AS `GROUP_ID` from (`student` `s` join `attendance` `a` on(`s`.`STUDENT_ACCOUNT` = `a`.`STUDENT_ACCOUNT`)) where `a`.`DATE` = '2020-01-04' and `a`.`ATTENDANCE` = 0;

-- 뷰 ssafy_new.1월5일결석 구조 내보내기
-- 임시 테이블을 제거하고 최종 VIEW 구조를 생성
DROP TABLE IF EXISTS `1월5일결석`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `1월5일결석` AS select distinct `s`.`STUDENT_ACCOUNT` AS `STUDENT_ACCOUNT`,`s`.`STUDENT_NAME` AS `STUDENT_NAME`,`s`.`STUDENT_HP` AS `STUDENT_HP`,`s`.`STUDENT_AGE` AS `STUDENT_AGE`,`s`.`STUDENT_GENDER` AS `STUDENT_GENDER`,`s`.`STUDENT_CURRICULUM` AS `STUDENT_CURRICULUM`,`s`.`STUDENT_REG` AS `STUDENT_REG`,`s`.`STUDENT_REG_DT` AS `STUDENT_REG_DT`,`s`.`STUDENT_LAST` AS `STUDENT_LAST`,`s`.`STUDENT_LAST_DT` AS `STUDENT_LAST_DT`,`s`.`ALGORITHM_GRADE` AS `ALGORITHM_GRADE`,`s`.`ALGORITHM_ACQUISITION_DATE` AS `ALGORITHM_ACQUISITION_DATE`,`s`.`GROUP_ID` AS `GROUP_ID` from (`student` `s` join `attendance` `a` on(`s`.`STUDENT_ACCOUNT` = `a`.`STUDENT_ACCOUNT`)) where `a`.`DATE` = '2020-01-05' and `a`.`ATTENDANCE` = 0;

-- 뷰 ssafy_new.1월6일결석 구조 내보내기
-- 임시 테이블을 제거하고 최종 VIEW 구조를 생성
DROP TABLE IF EXISTS `1월6일결석`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `1월6일결석` AS select distinct `s`.`STUDENT_ACCOUNT` AS `STUDENT_ACCOUNT`,`s`.`STUDENT_NAME` AS `STUDENT_NAME`,`s`.`STUDENT_HP` AS `STUDENT_HP`,`s`.`STUDENT_AGE` AS `STUDENT_AGE`,`s`.`STUDENT_GENDER` AS `STUDENT_GENDER`,`s`.`STUDENT_CURRICULUM` AS `STUDENT_CURRICULUM`,`s`.`STUDENT_REG` AS `STUDENT_REG`,`s`.`STUDENT_REG_DT` AS `STUDENT_REG_DT`,`s`.`STUDENT_LAST` AS `STUDENT_LAST`,`s`.`STUDENT_LAST_DT` AS `STUDENT_LAST_DT`,`s`.`ALGORITHM_GRADE` AS `ALGORITHM_GRADE`,`s`.`ALGORITHM_ACQUISITION_DATE` AS `ALGORITHM_ACQUISITION_DATE`,`s`.`GROUP_ID` AS `GROUP_ID` from (`student` `s` join `attendance` `a` on(`s`.`STUDENT_ACCOUNT` = `a`.`STUDENT_ACCOUNT`)) where `a`.`DATE` = '2020-01-6' and `a`.`ATTENDANCE` = 0;

-- 뷰 ssafy_new.1월7일결석 구조 내보내기
-- 임시 테이블을 제거하고 최종 VIEW 구조를 생성
DROP TABLE IF EXISTS `1월7일결석`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `1월7일결석` AS select distinct `s`.`STUDENT_ACCOUNT` AS `STUDENT_ACCOUNT`,`s`.`STUDENT_NAME` AS `STUDENT_NAME`,`s`.`STUDENT_HP` AS `STUDENT_HP`,`s`.`STUDENT_AGE` AS `STUDENT_AGE`,`s`.`STUDENT_GENDER` AS `STUDENT_GENDER`,`s`.`STUDENT_CURRICULUM` AS `STUDENT_CURRICULUM`,`s`.`STUDENT_REG` AS `STUDENT_REG`,`s`.`STUDENT_REG_DT` AS `STUDENT_REG_DT`,`s`.`STUDENT_LAST` AS `STUDENT_LAST`,`s`.`STUDENT_LAST_DT` AS `STUDENT_LAST_DT`,`s`.`ALGORITHM_GRADE` AS `ALGORITHM_GRADE`,`s`.`ALGORITHM_ACQUISITION_DATE` AS `ALGORITHM_ACQUISITION_DATE`,`s`.`GROUP_ID` AS `GROUP_ID` from (`student` `s` join `attendance` `a` on(`s`.`STUDENT_ACCOUNT` = `a`.`STUDENT_ACCOUNT`)) where `a`.`DATE` = '2020-01-7' and `a`.`ATTENDANCE` = 0;

-- 뷰 ssafy_new.1월8일결석 구조 내보내기
-- 임시 테이블을 제거하고 최종 VIEW 구조를 생성
DROP TABLE IF EXISTS `1월8일결석`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `1월8일결석` AS select distinct `s`.`STUDENT_ACCOUNT` AS `STUDENT_ACCOUNT`,`s`.`STUDENT_NAME` AS `STUDENT_NAME`,`s`.`STUDENT_HP` AS `STUDENT_HP`,`s`.`STUDENT_AGE` AS `STUDENT_AGE`,`s`.`STUDENT_GENDER` AS `STUDENT_GENDER`,`s`.`STUDENT_CURRICULUM` AS `STUDENT_CURRICULUM`,`s`.`STUDENT_REG` AS `STUDENT_REG`,`s`.`STUDENT_REG_DT` AS `STUDENT_REG_DT`,`s`.`STUDENT_LAST` AS `STUDENT_LAST`,`s`.`STUDENT_LAST_DT` AS `STUDENT_LAST_DT`,`s`.`ALGORITHM_GRADE` AS `ALGORITHM_GRADE`,`s`.`ALGORITHM_ACQUISITION_DATE` AS `ALGORITHM_ACQUISITION_DATE`,`s`.`GROUP_ID` AS `GROUP_ID` from (`student` `s` join `attendance` `a` on(`s`.`STUDENT_ACCOUNT` = `a`.`STUDENT_ACCOUNT`)) where `a`.`DATE` = '2020-01-8' and `a`.`ATTENDANCE` = 0;

-- 뷰 ssafy_new.1월9일결석자 구조 내보내기
-- 임시 테이블을 제거하고 최종 VIEW 구조를 생성
DROP TABLE IF EXISTS `1월9일결석자`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `1월9일결석자` AS select distinct `s`.`STUDENT_ACCOUNT` AS `STUDENT_ACCOUNT`,`s`.`STUDENT_NAME` AS `STUDENT_NAME`,`s`.`STUDENT_HP` AS `STUDENT_HP`,`s`.`STUDENT_AGE` AS `STUDENT_AGE`,`s`.`STUDENT_GENDER` AS `STUDENT_GENDER`,`s`.`STUDENT_CURRICULUM` AS `STUDENT_CURRICULUM`,`s`.`STUDENT_REG` AS `STUDENT_REG`,`s`.`STUDENT_REG_DT` AS `STUDENT_REG_DT`,`s`.`STUDENT_LAST` AS `STUDENT_LAST`,`s`.`STUDENT_LAST_DT` AS `STUDENT_LAST_DT`,`s`.`ALGORITHM_GRADE` AS `ALGORITHM_GRADE`,`s`.`ALGORITHM_ACQUISITION_DATE` AS `ALGORITHM_ACQUISITION_DATE`,`s`.`GROUP_ID` AS `GROUP_ID` from (`student` `s` join `attendance` `a` on(`s`.`STUDENT_ACCOUNT` = `a`.`STUDENT_ACCOUNT`)) where `a`.`DATE` = '2020-01-9' and `a`.`ATTENDANCE` = 0;

-- 뷰 ssafy_new.2기알고리즘a+이상 구조 내보내기
-- 임시 테이블을 제거하고 최종 VIEW 구조를 생성
DROP TABLE IF EXISTS `2기알고리즘a+이상`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `2기알고리즘a+이상` AS select distinct `student`.`STUDENT_ACCOUNT` AS `STUDENT_ACCOUNT`,`student`.`STUDENT_NAME` AS `STUDENT_NAME`,`student`.`STUDENT_HP` AS `STUDENT_HP`,`student`.`STUDENT_AGE` AS `STUDENT_AGE`,`student`.`STUDENT_GENDER` AS `STUDENT_GENDER`,`student`.`STUDENT_CURRICULUM` AS `STUDENT_CURRICULUM`,`student`.`STUDENT_REG` AS `STUDENT_REG`,`student`.`STUDENT_REG_DT` AS `STUDENT_REG_DT`,`student`.`STUDENT_LAST` AS `STUDENT_LAST`,`student`.`STUDENT_LAST_DT` AS `STUDENT_LAST_DT`,`student`.`ALGORITHM_GRADE` AS `ALGORITHM_GRADE`,`student`.`ALGORITHM_ACQUISITION_DATE` AS `ALGORITHM_ACQUISITION_DATE`,`student`.`GROUP_ID` AS `GROUP_ID` from `student` where (`student`.`ALGORITHM_GRADE` = 'A+' or `student`.`ALGORITHM_GRADE` = 'B') and `student`.`STUDENT_CURRICULUM` = '2';

-- 뷰 ssafy_new.광주a+이상 구조 내보내기
-- 임시 테이블을 제거하고 최종 VIEW 구조를 생성
DROP TABLE IF EXISTS `광주a+이상`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `광주a+이상` AS select distinct `s`.`STUDENT_ACCOUNT` AS `STUDENT_ACCOUNT`,`s`.`STUDENT_NAME` AS `STUDENT_NAME`,`s`.`STUDENT_HP` AS `STUDENT_HP`,`s`.`STUDENT_AGE` AS `STUDENT_AGE`,`s`.`STUDENT_GENDER` AS `STUDENT_GENDER`,`s`.`STUDENT_CURRICULUM` AS `STUDENT_CURRICULUM`,`s`.`STUDENT_REG` AS `STUDENT_REG`,`s`.`STUDENT_REG_DT` AS `STUDENT_REG_DT`,`s`.`STUDENT_LAST` AS `STUDENT_LAST`,`s`.`STUDENT_LAST_DT` AS `STUDENT_LAST_DT`,`s`.`ALGORITHM_GRADE` AS `ALGORITHM_GRADE`,`s`.`ALGORITHM_ACQUISITION_DATE` AS `ALGORITHM_ACQUISITION_DATE`,`s`.`GROUP_ID` AS `GROUP_ID` from ((`student` `s` join `group` `g` on(`s`.`GROUP_ID` = `g`.`GROUP_ID`)) join `class` `c` on(`c`.`CLASS_ID` = `g`.`CLASS_ID`)) where `c`.`REGION_ID` = '광주' and (`s`.`ALGORITHM_GRADE` = 'A+' or `s`.`ALGORITHM_GRADE` = 'B');

-- 뷰 ssafy_new.구미a+이상 구조 내보내기
-- 임시 테이블을 제거하고 최종 VIEW 구조를 생성
DROP TABLE IF EXISTS `구미a+이상`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `구미a+이상` AS select distinct `s`.`STUDENT_ACCOUNT` AS `STUDENT_ACCOUNT`,`s`.`STUDENT_NAME` AS `STUDENT_NAME`,`s`.`STUDENT_HP` AS `STUDENT_HP`,`s`.`STUDENT_AGE` AS `STUDENT_AGE`,`s`.`STUDENT_GENDER` AS `STUDENT_GENDER`,`s`.`STUDENT_CURRICULUM` AS `STUDENT_CURRICULUM`,`s`.`STUDENT_REG` AS `STUDENT_REG`,`s`.`STUDENT_REG_DT` AS `STUDENT_REG_DT`,`s`.`STUDENT_LAST` AS `STUDENT_LAST`,`s`.`STUDENT_LAST_DT` AS `STUDENT_LAST_DT`,`s`.`ALGORITHM_GRADE` AS `ALGORITHM_GRADE`,`s`.`ALGORITHM_ACQUISITION_DATE` AS `ALGORITHM_ACQUISITION_DATE`,`s`.`GROUP_ID` AS `GROUP_ID` from ((`student` `s` join `group` `g` on(`s`.`GROUP_ID` = `g`.`GROUP_ID`)) join `class` `c` on(`c`.`CLASS_ID` = `g`.`CLASS_ID`)) where `c`.`REGION_ID` = '구미' and (`s`.`ALGORITHM_GRADE` = 'A+' or `s`.`ALGORITHM_GRADE` = 'B');

-- 뷰 ssafy_new.대전a+이상 구조 내보내기
-- 임시 테이블을 제거하고 최종 VIEW 구조를 생성
DROP TABLE IF EXISTS `대전a+이상`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `대전a+이상` AS select distinct `s`.`STUDENT_ACCOUNT` AS `STUDENT_ACCOUNT`,`s`.`STUDENT_NAME` AS `STUDENT_NAME`,`s`.`STUDENT_HP` AS `STUDENT_HP`,`s`.`STUDENT_AGE` AS `STUDENT_AGE`,`s`.`STUDENT_GENDER` AS `STUDENT_GENDER`,`s`.`STUDENT_CURRICULUM` AS `STUDENT_CURRICULUM`,`s`.`STUDENT_REG` AS `STUDENT_REG`,`s`.`STUDENT_REG_DT` AS `STUDENT_REG_DT`,`s`.`STUDENT_LAST` AS `STUDENT_LAST`,`s`.`STUDENT_LAST_DT` AS `STUDENT_LAST_DT`,`s`.`ALGORITHM_GRADE` AS `ALGORITHM_GRADE`,`s`.`ALGORITHM_ACQUISITION_DATE` AS `ALGORITHM_ACQUISITION_DATE`,`s`.`GROUP_ID` AS `GROUP_ID` from ((`student` `s` join `group` `g` on(`s`.`GROUP_ID` = `g`.`GROUP_ID`)) join `class` `c` on(`c`.`CLASS_ID` = `g`.`CLASS_ID`)) where `c`.`REGION_ID` = '대전' and (`s`.`ALGORITHM_GRADE` = 'A+' or `s`.`ALGORITHM_GRADE` = 'B');

-- 뷰 ssafy_new.서울a+이상 구조 내보내기
-- 임시 테이블을 제거하고 최종 VIEW 구조를 생성
DROP TABLE IF EXISTS `서울a+이상`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `서울a+이상` AS select distinct `s`.`STUDENT_ACCOUNT` AS `STUDENT_ACCOUNT`,`s`.`STUDENT_NAME` AS `STUDENT_NAME`,`s`.`STUDENT_HP` AS `STUDENT_HP`,`s`.`STUDENT_AGE` AS `STUDENT_AGE`,`s`.`STUDENT_GENDER` AS `STUDENT_GENDER`,`s`.`STUDENT_CURRICULUM` AS `STUDENT_CURRICULUM`,`s`.`STUDENT_REG` AS `STUDENT_REG`,`s`.`STUDENT_REG_DT` AS `STUDENT_REG_DT`,`s`.`STUDENT_LAST` AS `STUDENT_LAST`,`s`.`STUDENT_LAST_DT` AS `STUDENT_LAST_DT`,`s`.`ALGORITHM_GRADE` AS `ALGORITHM_GRADE`,`s`.`ALGORITHM_ACQUISITION_DATE` AS `ALGORITHM_ACQUISITION_DATE`,`s`.`GROUP_ID` AS `GROUP_ID` from ((`student` `s` join `group` `g` on(`s`.`GROUP_ID` = `g`.`GROUP_ID`)) join `class` `c` on(`c`.`CLASS_ID` = `g`.`CLASS_ID`)) where `c`.`REGION_ID` = '서울' and (`s`.`ALGORITHM_GRADE` = 'A+' or `s`.`ALGORITHM_GRADE` = 'B');

/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
